This is an alternate version of the simulation in
../testPatternedSurface1 that qualitatively implements a patterned
substrate according to the "model A" scheme in the conference paper
"Computer Simulation of Nucleation on Patterned Surfaces" by
A. Kuronen, L. Nurminen, and K. Kaski, MRS Fall Meeting 1999.

Instructions for running the example:

- The Makefile requires a working "make.inc" file. To generate this
  file, run the script "mkMakeInc.sh", which will prompt for the
  directories where the KMCThinFilm library and Boost are installed,
  as well as some other things. (Alternatively, run "mkMakeInc.sh"
  with the "--batch" option, which will generate a skeleton "make.inc"
  with dummy values that one then edit manually.)

  After this is done, just type "make".

- Change to the "testdir" directory, which should be empty. Run the
  command "../testPatternedSurface" to perform the simulation, which
  has taken about a quarter of a minute to run on a workstation with
  an Intel Xeon 3.3 GHz processor.

  The directory should now be full of files named "snapshot1.dat",
  "snapshot2.dat", etc.

- To visualize the results of the example simulation, Python, NumPy,
  and Matplotlib should be installed. Once this is done, one can run
  the command "../getOverheadViewAndCovData.py" in the "testdir"
  directory. This will generate PNG files named "img0001.png",
  "img0002.png", etc., which correspond to the files named
  "snapshot1.dat", "snapshot2.dat", etc, respectively. There will also
  be a file named "coverage.dat" that shows the coverage of the
  simulated substrate with time, which should show the coverage
  increasing up to about 0.15 and then plateauing. (The
  root-mean-square of the height of the deposited film is also shown,
  though it doesn't mean much here.)

  These results should be the same as those in the "testdir_ref"
  directory.

- The script mkSubstratePattern.py can, if need be, recreate the file
  singleDomain.dat and---if a recent version of Matplotlib is
  installed---the graphics file singleDomain.png, which contains a
  visualization of the data in singleDomain.dat. Running this script
  should be optional, though.

- To clean up after running the test simulation, type "make
  cleanall". This will remove the testPatternedSubstrate binary, the
  output files from the simulation runs, and miscellaneous object
  files.
